{"version":3,"sources":["index.js"],"names":["Box","selectBox","props","row","col","className","this","boxClass","id","onClick","React","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","key","style","Buttons","handleSelect","e","gridSize","playButton","pauseButton","clear","slow","fast","seed","title","onSelect","eventKey","Main","gridCopy","arrayClone","state","console","log","setState","Math","floor","random","speed","grid","Array","fill","map","generation","size","clearInterval","intervalId","setInterval","play","g","g2","count","arr","JSON","parse","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8050bd83.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ButtonToolbar, DropdownItem, DropdownButton } from \"react-bootstrap\";\n\nclass Box extends React.Component {\n  selectBox = () => {\n    this.props.selectBox(this.props.row, this.props.col);\n  };\n  render() {\n    return (\n      <div\n        className={this.props.boxClass}\n        id={this.props.id}\n        onClick={this.selectBox}\n      ></div>\n    );\n  }\n}\n\nclass Grid extends React.Component {\n  render() {\n    const width = this.props.cols * 14;\n    let rowsArr = [];\n\n    let boxClass = \"\";\n    for (let i = 0; i < this.props.rows; i++) {\n      for (let j = 0; j < this.props.cols; j++) {\n        let boxId = i + \"_\" + j;\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n        rowsArr.push(\n          <Box\n            boxClass={boxClass}\n            key={boxId}\n            boxId={boxId}\n            row={i}\n            col={j}\n            selectBox={this.props.selectBox}\n          />\n        );\n      }\n    }\n    return (\n      <div className=\"grid\" style={{ width: width }}>\n        {rowsArr}\n      </div>\n    );\n  }\n}\n\nclass Buttons extends React.Component {\n  handleSelect = (e) => {\n    this.props.gridSize(e);\n  };\n  render() {\n    return (\n      <div className=\"center\">\n        <ButtonToolbar>\n          <button className=\"btn btn-primary\" onClick={this.props.playButton}>\n            Play\n          </button>\n          <button className=\"btn btn-primary\" onClick={this.props.pauseButton}>\n            Pause\n          </button>\n          <button className=\"btn btn-primary\" onClick={this.props.clear}>\n            clear\n          </button>\n          <button className=\"btn btn-primary\" onClick={this.props.slow}>\n            Slow\n          </button>\n          <button className=\"btn btn-primary\" onClick={this.props.fast}>\n            Fast\n          </button>\n          <button className=\"btn btn-primary\" onClick={this.props.seed}>\n            Seed\n          </button>\n          <DropdownButton\n            title=\"Grid Size\"\n            id=\"size=menu\"\n            onSelect={this.handleSelect}\n          >\n            <DropdownItem eventKey=\"1\">20*10</DropdownItem>\n            <DropdownItem eventKey=\"2\">50*30</DropdownItem>\n            <DropdownItem eventKey=\"3\">70*50</DropdownItem>\n          </DropdownButton>\n        </ButtonToolbar>\n      </div>\n    );\n  }\n}\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.speed = 1000;\n    this.rows = 30;\n    this.cols = 50;\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false)),\n    };\n  }\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    console.log(gridCopy);\n    console.log(row);\n    console.log(col);\n\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy,\n    });\n  };\n\n  seed = () => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (Math.floor(Math.random() * 6) === 1) {\n          gridCopy[i][j] = true;\n        }\n      }\n    }\n    this.setState({\n      gridFull: gridCopy,\n    });\n  };\n  slow = () => {\n    this.speed = 1000;\n    this.playButton();\n  };\n  fast = () => {\n    this.speed = 100;\n    this.playButton();\n  };\n\n  clear = () => {\n    let grid = Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false));\n    this.setState({\n      gridFull: grid,\n      generation: 0,\n    });\n  };\n\n  gridSize = (size) => {\n    switch (size) {\n      case \"1\":\n        this.cols = 20;\n        this.rows = 10;\n        break;\n      case \"2\":\n        this.cols = 50;\n        this.rows = 30;\n        break;\n      default:\n        this.cols = 70;\n        this.rows = 50;\n        break;\n    }\n    this.clear();\n  };\n\n  playButton = () => {\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(this.play, this.speed);\n  };\n\n  play = () => {\n    let g = this.state.gridFull;\n    let g2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        let count = 0;\n        if (i > 0) if (g[i - 1][j]) count++;\n        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n        if (j < this.cols - 1) if (g[i][j + 1]) count++;\n        if (j > 0) if (g[i][j - 1]) count++;\n        if (i < this.rows - 1) if (g[i + 1][j]) count++;\n        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n        if (i < this.rows - 1 && j < this.cols - 1)\n          if (g[i + 1][j + 1]) count++;\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n        if (!g[i][j] && count === 3) g2[i][j] = true;\n      }\n    }\n    this.setState({\n      gridFull: g2,\n      generation: this.state.generation + 1,\n    });\n  };\n\n  pauseButton = () => {\n    clearInterval(this.intervalId);\n  };\n\n  componentDidMount() {\n    this.seed();\n    this.playButton();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Game of life</h1>\n        <Buttons\n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          slow={this.slow}\n          fast={this.fast}\n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h1>Genereations:{this.state.generation}</h1>\n      </div>\n    );\n  }\n}\n\n// deep clone\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}